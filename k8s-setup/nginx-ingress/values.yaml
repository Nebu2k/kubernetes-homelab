# NGINX Ingress Controller Helm Values
# Based on ingress-nginx v1.12.3

controller:
  image:
    repository: registry.k8s.io/ingress-nginx/controller
    tag: v1.12.3
    digest: ""
  
  # Replica count for high availability
  replicaCount: 2
  
  # Resources for the controller
  resources:
    limits:
      cpu: 100m
      memory: 90Mi
    requests:
      cpu: 100m
      memory: 90Mi
  
  # Service configuration
  service:
    enabled: true
    type: LoadBalancer
    # Use MetalLB to assign the external IP
    loadBalancerIP: "192.168.2.254"
    externalTrafficPolicy: Local
    
    # HTTP and HTTPS ports
    ports:
      http: 80
      https: 443
    
    # Additional ports for custom services (optional)
    # targetPorts:
    #   http: http
    #   https: https
  
  # Ingress class configuration
  ingressClass: nginx
  ingressClassResource:
    enabled: true
    default: true
    name: nginx
    controllerValue: "k8s.io/ingress-nginx"
  
  # Enable metrics for monitoring
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false  # Set to true if you have Prometheus Operator
    
  # Pod disruption budget for high availability
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  
  # Node affinity to spread pods across nodes
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - ingress-nginx
            - key: app.kubernetes.io/component
              operator: In
              values:
              - controller
          topologyKey: kubernetes.io/hostname
  
  # Additional configuration options
  config:
    # Enable real IP forwarding
    use-forwarded-headers: "true"
    compute-full-forwarded-for: "true"
    use-proxy-protocol: "false"
    
    # SSL configuration
    ssl-protocols: "TLSv1.2 TLSv1.3"
    ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384"
    
    # Performance tuning
    worker-processes: "auto"
    max-worker-connections: "16384"
    keep-alive-requests: "10000"
    
    # GRPC configuration for ArgoCD
    grpc-read-timeout: "300"
    grpc-send-timeout: "300"
    
    # Proxy timeouts
    proxy-read-timeout: "300"
    proxy-send-timeout: "300"
    proxy-connect-timeout: "300"
    
    # Security headers
    add-headers: "ingress-nginx/custom-headers"
  
  # Tolerations to run on all nodes
  tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists

# Default backend (optional)
# Disabled because multi-arch images are not available
defaultBackend:
  enabled: false
  # image:
  #   repository: registry.k8s.io/defaultbackend
  #   tag: "1.5"
  # 
  # resources:
  #   limits:
  #     cpu: 10m
  #     memory: 20Mi
  #   requests:
  #     cpu: 10m
  #     memory: 20Mi

# RBAC configuration
rbac:
  create: true

# Service account
serviceAccount:
  create: true
  name: ""
  automountServiceAccountToken: true

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 101
  fsGroup: 101
